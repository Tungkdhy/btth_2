import { ChangeDetectorRef, Component, Input, OnInit, SimpleChanges } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';
import { ConvertServiceComponent } from 'src/app/modules/dashboard/services/convert-service.component';
import { SupabaseService } from 'src/app/modules/dashboard/services/supabase.service';
import { Constant } from 'src/app/core/config/constant';

@Component({
  selector: 'app-uncleaned-malware-client-server-list-card',
  standalone: true,
  imports: [CommonModule,NgbPaginationModule],
  templateUrl: './uncleaned-malware-list-card.component.html',
  styleUrls: ['./uncleaned-malware-list-card.component.scss'],
})
export class UncleanedMalwareClientServerListCardComponent implements OnInit {

  @Input() serial_number:any;

  dataSource:any[]=[];
  page = 1;
  pageSize = 5;
  total =0;

  constructor(
    private cdr: ChangeDetectorRef,
    private convertServiceComponent:ConvertServiceComponent,
    private supabaseService: SupabaseService
  ){

  }

  async ngOnInit() {
  }

  async ngOnChanges(changes: SimpleChanges) {
    let data:any = await this.supabaseService.getDanhSachChuaDuocLamSachClientServer(this.serial_number);
    this.dataSource = data?.items;
    this.total = data?.total;
    this.cdr.detectChanges();
  };

  async onPageChange(page: number) {
    this.page = page;
    let data:any = await this.supabaseService.getDanhSachChuaDuocLamSachClientServer(this.serial_number,page,this.pageSize);
    this.dataSource = data?.items;
    this.total = data?.total;
    this.cdr.detectChanges();

  }

  getAlertSource(main_type: string, alert_source: string) {

    if (alert_source == "TA-21/NextAV") {
      if (main_type == Constant.MAIN_TYPE.QS) {
        return "TA21"
      } else if (main_type == Constant.MAIN_TYPE.CD) {
        return "NextAV"
      } else {
        return alert_source
      }
    } else if(alert_source == "FMS/MMS") {
      if (main_type == Constant.MAIN_TYPE.QS) {
        return "FMS"
      } else if (main_type == Constant.MAIN_TYPE.CD) {
        return "MMS"
      } else {
        return alert_source
      }
    }else {
      return alert_source
    }
  }

  getTypeNetwork(type:string){
    return this.convertServiceComponent.getTypeNetwork(type);
  }
  getRegionType(region:string){
    return this.convertServiceComponent.getName(region);
  }
  getValueSecurity(name:string):string {
    return this.convertServiceComponent.getTypeSecurity(name);
  }
}
